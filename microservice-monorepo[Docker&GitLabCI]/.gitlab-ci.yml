workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "mono"
      when: never
    - when: always

variables:
  DEPLOYMENT_SERVER_HOST: "34.238.85.167"
  DEPLOYMENT_SERVER_ENDPOINT: "ec2-34-238-85-167.compute-1.amazonaws.com"

stages:
  - build
  - deploy

.build_image:
  stage: build
  tags:
    - shell
  variables: 
    - SERVICE_VERSION = ""
    - MICRO_SERVICE = ""
  before_script:
    - cd $MICRO_SERVICE
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/microservice/$MICRO_SERVICE
    - export IMAGE_TAG=$SERVICE_VERSION 
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

build_frontend:
  extends: .build_image
  variables: 
    MICRO_SERVICE: frontend
    SERVICE_VERSION: "1.3"
  only:
    changes:
      - "frontend/**/*"

build_products:
  extends: .build_image
  variables: 
    MICRO_SERVICE: products
    SERVICE_VERSION: "2.3"
  only:
    changes:
      - "products/**/*"

build_shopping-cart:
  extends: .build_image
  variables: 
    MICRO_SERVICE: shopping-cart
    SERVICE_VERSION: "3.3"
  only:
    changes:
      - "shopping-cart/**/*"

#build_frontend:
#  stage: build
#  tags:
#    - shell
#  before_script:
#    - cd frontend
#    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/microservice/frontend
#    - export IMAGE_TAG=1.3
#  script: 
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#    - docker push $IMAGE_NAME:$IMAGE_TAG
#  only:
#    changes:
#      - "frontend/**/*"
#
#build_products:
#  stage: build
#  tags:
#    - shell
#  before_script:
#    - cd products
#    - export IMAGE_NAME = $CI_REGISTRY_IMAGE/microservice/products
#    - export IAMGE_TAG = 2.3
#  script: 
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#    - docker push $IMAGE_NAME:$IMAGE_TAG
#  only:
#    changes:
#      - "products/**/*"
#
#build_shopping-cart:
#  stage: build 
#  tags:
#    - shell
#  before_script:
#    - cd shopping-cart 
#    - export IMAGE_NAME = $CI_REGISTRY_IMAGE/microservice/shopping-cart
#    - export IMAGE_TAG = 3.3
#  script: 
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#    - docker push $IMAGE_NAME:$IMAGE_TAG
#  only:
#    changes:
#      - "shopping-cart/**/*"

################ Configuration of Deploy Jobs #######################

.deploy:
  stage: deploy 
  tags:
    - shell
  variables:
    - MICRO_SERVICE: ""
    - SERVICE_VERSION: ""
    - APP_PORT: ""
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/microservice/$MICRO_SERVICE
    - export IMAGE_TAG=$SERVICE_VERSION 
  script: 
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yaml ubuntu@$DEPLOYMENT_SERVER_HOST:/home/ubuntu
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$DEPLOYMENT_SERVER_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&

      export COMPOSE_PROJECT_NAME=$MICRO_SERVICE &&
      export DC_IMAGE_NAME=$IMAGE_NAME &&
      export DC_IMAGE_TAG=$SERVICE_VERSION &&
      export DC_APP_PORT=$APP_PORT &&

      docker network create micro_service || true &&

      docker-compose down &&
      docker-compose up -d"


deploy_frontend:
  extends: .deploy
  variables: 
    MICRO_SERVICE: "frontend"
    SERVICE_VERSION: "1.3"
    APP_PORT: "3000"
  only:
    changes:
      - "frontend/**/*"

deploy_products:
  extends: .deploy
  variables: 
    MICRO_SERVICE: "products"
    SERVICE_VERSION: "2.3"
    APP_PORT: "3001"
  only:
    changes:
      - "products/**/*"

deploy_shopping-cart:
  extends: .deploy
  variables: 
    MICRO_SERVICE: "shopping-cart"
    SERVICE_VERSION: "3.3"
    APP_PORT: "3002"
  only:
    changes:
      - "shopping-cart/**/*"

